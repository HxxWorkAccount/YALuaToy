//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from YALuaToy/Assets/LuaLexer.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace YALuaToy.Compilation.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class LuaLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SEMI=1, ASSIGN=2, COMMA=3, LT=4, GT=5, DOT=6, SQUIG=7, MINUS=8, POUND=9, 
		OP=10, CP=11, AMP=12, PER=13, COL=14, PLUS=15, STAR=16, OCU=17, CCU=18, 
		OB=19, CB=20, PIPE=21, CARET=22, SLASH=23, AND=24, BREAK=25, DO=26, ELSE=27, 
		ELSEIF=28, END=29, FALSE=30, FOR=31, FUNCTION=32, GOTO=33, IF=34, IN=35, 
		LOCAL=36, NIL=37, NOT=38, OR=39, REPEAT=40, RETURN=41, THEN=42, TRUE=43, 
		UNTIL=44, WHILE=45, IDIV=46, CONCAT=47, DOTS=48, EQ=49, GE=50, LE=51, 
		NE=52, SHL=53, SHR=54, DBCOLON=55, NAME=56, NORMALSTRING=57, CHARSTRING=58, 
		LONGSTRING=59, INT=60, HEX=61, FLOAT=62, HEX_FLOAT=63, COMMENT=64, WS=65, 
		NL=66, SHEBANG=67;
	public const int
		CommentChannel=2;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "CommentChannel"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"SEMI", "ASSIGN", "COMMA", "LT", "GT", "DOT", "SQUIG", "MINUS", "POUND", 
		"OP", "CP", "AMP", "PER", "COL", "PLUS", "STAR", "OCU", "CCU", "OB", "CB", 
		"PIPE", "CARET", "SLASH", "AND", "BREAK", "DO", "ELSE", "ELSEIF", "END", 
		"FALSE", "FOR", "FUNCTION", "GOTO", "IF", "IN", "LOCAL", "NIL", "NOT", 
		"OR", "REPEAT", "RETURN", "THEN", "TRUE", "UNTIL", "WHILE", "IDIV", "CONCAT", 
		"DOTS", "EQ", "GE", "LE", "NE", "SHL", "SHR", "DBCOLON", "NAME", "NORMALSTRING", 
		"CHARSTRING", "LONGSTRING", "NESTED_STR", "INT", "HEX", "FLOAT", "HEX_FLOAT", 
		"ExponentPart", "HexExponentPart", "EscapeSequence", "DecimalEscape", 
		"HexEscape", "UtfEscape", "Digit", "HexDigit", "SingleLineInputCharacter", 
		"COMMENT", "WS", "NL", "SHEBANG"
	};


	public LuaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public LuaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'='", "','", "'<'", "'>'", "'.'", "'~'", "'-'", "'#'", "'('", 
		"')'", "'&'", "'%'", "':'", "'+'", "'*'", "'{'", "'}'", "'['", "']'", 
		"'|'", "'^'", "'/'", "'and'", "'break'", "'do'", "'else'", "'elseif'", 
		"'end'", "'false'", "'for'", "'function'", "'goto'", "'if'", "'in'", "'local'", 
		"'nil'", "'not'", "'or'", "'repeat'", "'return'", "'then'", "'true'", 
		"'until'", "'while'", "'//'", "'..'", "'...'", "'=='", "'>='", "'<='", 
		"'~='", "'<<'", "'>>'", "'::'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SEMI", "ASSIGN", "COMMA", "LT", "GT", "DOT", "SQUIG", "MINUS", 
		"POUND", "OP", "CP", "AMP", "PER", "COL", "PLUS", "STAR", "OCU", "CCU", 
		"OB", "CB", "PIPE", "CARET", "SLASH", "AND", "BREAK", "DO", "ELSE", "ELSEIF", 
		"END", "FALSE", "FOR", "FUNCTION", "GOTO", "IF", "IN", "LOCAL", "NIL", 
		"NOT", "OR", "REPEAT", "RETURN", "THEN", "TRUE", "UNTIL", "WHILE", "IDIV", 
		"CONCAT", "DOTS", "EQ", "GE", "LE", "NE", "SHL", "SHR", "DBCOLON", "NAME", 
		"NORMALSTRING", "CHARSTRING", "LONGSTRING", "INT", "HEX", "FLOAT", "HEX_FLOAT", 
		"COMMENT", "WS", "NL", "SHEBANG"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "LuaLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static LuaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 76 : return SHEBANG_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool SHEBANG_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return  IsLine1Col0() ;
		}
		return true;
	}

	private static int[] _serializedATN = {
		4,0,67,579,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,1,0,1,
		0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,
		1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,
		16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,
		23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,
		26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,
		29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,
		31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,
		34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,
		37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,
		40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,
		42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,
		45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,
		49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,
		54,1,54,1,55,1,55,5,55,347,8,55,10,55,12,55,350,9,55,1,56,1,56,1,56,5,
		56,355,8,56,10,56,12,56,358,9,56,1,56,1,56,1,57,1,57,1,57,5,57,365,8,57,
		10,57,12,57,368,9,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,
		1,59,1,59,5,59,382,8,59,10,59,12,59,385,9,59,1,59,3,59,388,8,59,1,60,4,
		60,391,8,60,11,60,12,60,392,1,61,1,61,1,61,4,61,398,8,61,11,61,12,61,399,
		1,62,4,62,403,8,62,11,62,12,62,404,1,62,1,62,5,62,409,8,62,10,62,12,62,
		412,9,62,1,62,3,62,415,8,62,1,62,1,62,4,62,419,8,62,11,62,12,62,420,1,
		62,3,62,424,8,62,1,62,4,62,427,8,62,11,62,12,62,428,1,62,1,62,3,62,433,
		8,62,1,63,1,63,1,63,4,63,438,8,63,11,63,12,63,439,1,63,1,63,5,63,444,8,
		63,10,63,12,63,447,9,63,1,63,3,63,450,8,63,1,63,1,63,1,63,1,63,4,63,456,
		8,63,11,63,12,63,457,1,63,3,63,461,8,63,1,63,1,63,1,63,4,63,466,8,63,11,
		63,12,63,467,1,63,1,63,3,63,472,8,63,1,64,1,64,3,64,476,8,64,1,64,4,64,
		479,8,64,11,64,12,64,480,1,65,1,65,3,65,485,8,65,1,65,4,65,488,8,65,11,
		65,12,65,489,1,66,1,66,1,66,1,66,3,66,496,8,66,1,66,1,66,1,66,1,66,3,66,
		502,8,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,3,67,515,
		8,67,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,4,69,527,8,69,11,
		69,12,69,528,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,73,1,
		73,1,73,1,73,1,73,1,73,5,73,547,8,73,10,73,12,73,550,9,73,3,73,552,8,73,
		1,73,1,73,1,74,4,74,557,8,74,11,74,12,74,558,1,74,1,74,1,75,1,75,1,75,
		1,75,1,76,1,76,1,76,3,76,570,8,76,1,76,5,76,573,8,76,10,76,12,76,576,9,
		76,1,76,1,76,1,383,0,77,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
		21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
		45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,
		69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
		93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
		57,115,58,117,59,119,0,121,60,123,61,125,62,127,63,129,0,131,0,133,0,135,
		0,137,0,139,0,141,0,143,0,145,0,147,64,149,65,151,66,153,67,1,0,16,3,0,
		65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,34,92,92,2,0,39,
		39,92,92,2,0,88,88,120,120,2,0,69,69,101,101,2,0,43,43,45,45,2,0,80,80,
		112,112,11,0,34,36,39,39,92,92,97,98,102,102,110,110,114,114,116,116,118,
		118,122,122,124,124,1,0,48,50,1,0,48,57,3,0,48,57,65,70,97,102,4,0,10,
		10,13,13,133,133,8232,8233,2,0,10,10,13,13,3,0,9,9,12,13,32,32,1,0,10,
		10,610,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
		1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
		0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
		1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
		0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
		1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,
		0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
		1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
		0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
		1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
		1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,121,
		1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,147,1,0,0,0,0,149,
		1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,1,155,1,0,0,0,3,157,1,0,0,0,5,159,
		1,0,0,0,7,161,1,0,0,0,9,163,1,0,0,0,11,165,1,0,0,0,13,167,1,0,0,0,15,169,
		1,0,0,0,17,171,1,0,0,0,19,173,1,0,0,0,21,175,1,0,0,0,23,177,1,0,0,0,25,
		179,1,0,0,0,27,181,1,0,0,0,29,183,1,0,0,0,31,185,1,0,0,0,33,187,1,0,0,
		0,35,189,1,0,0,0,37,191,1,0,0,0,39,193,1,0,0,0,41,195,1,0,0,0,43,197,1,
		0,0,0,45,199,1,0,0,0,47,201,1,0,0,0,49,205,1,0,0,0,51,211,1,0,0,0,53,214,
		1,0,0,0,55,219,1,0,0,0,57,226,1,0,0,0,59,230,1,0,0,0,61,236,1,0,0,0,63,
		240,1,0,0,0,65,249,1,0,0,0,67,254,1,0,0,0,69,257,1,0,0,0,71,260,1,0,0,
		0,73,266,1,0,0,0,75,270,1,0,0,0,77,274,1,0,0,0,79,277,1,0,0,0,81,284,1,
		0,0,0,83,291,1,0,0,0,85,296,1,0,0,0,87,301,1,0,0,0,89,307,1,0,0,0,91,313,
		1,0,0,0,93,316,1,0,0,0,95,319,1,0,0,0,97,323,1,0,0,0,99,326,1,0,0,0,101,
		329,1,0,0,0,103,332,1,0,0,0,105,335,1,0,0,0,107,338,1,0,0,0,109,341,1,
		0,0,0,111,344,1,0,0,0,113,351,1,0,0,0,115,361,1,0,0,0,117,371,1,0,0,0,
		119,387,1,0,0,0,121,390,1,0,0,0,123,394,1,0,0,0,125,432,1,0,0,0,127,471,
		1,0,0,0,129,473,1,0,0,0,131,482,1,0,0,0,133,501,1,0,0,0,135,514,1,0,0,
		0,137,516,1,0,0,0,139,521,1,0,0,0,141,532,1,0,0,0,143,534,1,0,0,0,145,
		536,1,0,0,0,147,551,1,0,0,0,149,556,1,0,0,0,151,562,1,0,0,0,153,566,1,
		0,0,0,155,156,5,59,0,0,156,2,1,0,0,0,157,158,5,61,0,0,158,4,1,0,0,0,159,
		160,5,44,0,0,160,6,1,0,0,0,161,162,5,60,0,0,162,8,1,0,0,0,163,164,5,62,
		0,0,164,10,1,0,0,0,165,166,5,46,0,0,166,12,1,0,0,0,167,168,5,126,0,0,168,
		14,1,0,0,0,169,170,5,45,0,0,170,16,1,0,0,0,171,172,5,35,0,0,172,18,1,0,
		0,0,173,174,5,40,0,0,174,20,1,0,0,0,175,176,5,41,0,0,176,22,1,0,0,0,177,
		178,5,38,0,0,178,24,1,0,0,0,179,180,5,37,0,0,180,26,1,0,0,0,181,182,5,
		58,0,0,182,28,1,0,0,0,183,184,5,43,0,0,184,30,1,0,0,0,185,186,5,42,0,0,
		186,32,1,0,0,0,187,188,5,123,0,0,188,34,1,0,0,0,189,190,5,125,0,0,190,
		36,1,0,0,0,191,192,5,91,0,0,192,38,1,0,0,0,193,194,5,93,0,0,194,40,1,0,
		0,0,195,196,5,124,0,0,196,42,1,0,0,0,197,198,5,94,0,0,198,44,1,0,0,0,199,
		200,5,47,0,0,200,46,1,0,0,0,201,202,5,97,0,0,202,203,5,110,0,0,203,204,
		5,100,0,0,204,48,1,0,0,0,205,206,5,98,0,0,206,207,5,114,0,0,207,208,5,
		101,0,0,208,209,5,97,0,0,209,210,5,107,0,0,210,50,1,0,0,0,211,212,5,100,
		0,0,212,213,5,111,0,0,213,52,1,0,0,0,214,215,5,101,0,0,215,216,5,108,0,
		0,216,217,5,115,0,0,217,218,5,101,0,0,218,54,1,0,0,0,219,220,5,101,0,0,
		220,221,5,108,0,0,221,222,5,115,0,0,222,223,5,101,0,0,223,224,5,105,0,
		0,224,225,5,102,0,0,225,56,1,0,0,0,226,227,5,101,0,0,227,228,5,110,0,0,
		228,229,5,100,0,0,229,58,1,0,0,0,230,231,5,102,0,0,231,232,5,97,0,0,232,
		233,5,108,0,0,233,234,5,115,0,0,234,235,5,101,0,0,235,60,1,0,0,0,236,237,
		5,102,0,0,237,238,5,111,0,0,238,239,5,114,0,0,239,62,1,0,0,0,240,241,5,
		102,0,0,241,242,5,117,0,0,242,243,5,110,0,0,243,244,5,99,0,0,244,245,5,
		116,0,0,245,246,5,105,0,0,246,247,5,111,0,0,247,248,5,110,0,0,248,64,1,
		0,0,0,249,250,5,103,0,0,250,251,5,111,0,0,251,252,5,116,0,0,252,253,5,
		111,0,0,253,66,1,0,0,0,254,255,5,105,0,0,255,256,5,102,0,0,256,68,1,0,
		0,0,257,258,5,105,0,0,258,259,5,110,0,0,259,70,1,0,0,0,260,261,5,108,0,
		0,261,262,5,111,0,0,262,263,5,99,0,0,263,264,5,97,0,0,264,265,5,108,0,
		0,265,72,1,0,0,0,266,267,5,110,0,0,267,268,5,105,0,0,268,269,5,108,0,0,
		269,74,1,0,0,0,270,271,5,110,0,0,271,272,5,111,0,0,272,273,5,116,0,0,273,
		76,1,0,0,0,274,275,5,111,0,0,275,276,5,114,0,0,276,78,1,0,0,0,277,278,
		5,114,0,0,278,279,5,101,0,0,279,280,5,112,0,0,280,281,5,101,0,0,281,282,
		5,97,0,0,282,283,5,116,0,0,283,80,1,0,0,0,284,285,5,114,0,0,285,286,5,
		101,0,0,286,287,5,116,0,0,287,288,5,117,0,0,288,289,5,114,0,0,289,290,
		5,110,0,0,290,82,1,0,0,0,291,292,5,116,0,0,292,293,5,104,0,0,293,294,5,
		101,0,0,294,295,5,110,0,0,295,84,1,0,0,0,296,297,5,116,0,0,297,298,5,114,
		0,0,298,299,5,117,0,0,299,300,5,101,0,0,300,86,1,0,0,0,301,302,5,117,0,
		0,302,303,5,110,0,0,303,304,5,116,0,0,304,305,5,105,0,0,305,306,5,108,
		0,0,306,88,1,0,0,0,307,308,5,119,0,0,308,309,5,104,0,0,309,310,5,105,0,
		0,310,311,5,108,0,0,311,312,5,101,0,0,312,90,1,0,0,0,313,314,5,47,0,0,
		314,315,5,47,0,0,315,92,1,0,0,0,316,317,5,46,0,0,317,318,5,46,0,0,318,
		94,1,0,0,0,319,320,5,46,0,0,320,321,5,46,0,0,321,322,5,46,0,0,322,96,1,
		0,0,0,323,324,5,61,0,0,324,325,5,61,0,0,325,98,1,0,0,0,326,327,5,62,0,
		0,327,328,5,61,0,0,328,100,1,0,0,0,329,330,5,60,0,0,330,331,5,61,0,0,331,
		102,1,0,0,0,332,333,5,126,0,0,333,334,5,61,0,0,334,104,1,0,0,0,335,336,
		5,60,0,0,336,337,5,60,0,0,337,106,1,0,0,0,338,339,5,62,0,0,339,340,5,62,
		0,0,340,108,1,0,0,0,341,342,5,58,0,0,342,343,5,58,0,0,343,110,1,0,0,0,
		344,348,7,0,0,0,345,347,7,1,0,0,346,345,1,0,0,0,347,350,1,0,0,0,348,346,
		1,0,0,0,348,349,1,0,0,0,349,112,1,0,0,0,350,348,1,0,0,0,351,356,5,34,0,
		0,352,355,3,133,66,0,353,355,8,2,0,0,354,352,1,0,0,0,354,353,1,0,0,0,355,
		358,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,359,1,0,0,0,358,356,1,
		0,0,0,359,360,5,34,0,0,360,114,1,0,0,0,361,366,5,39,0,0,362,365,3,133,
		66,0,363,365,8,3,0,0,364,362,1,0,0,0,364,363,1,0,0,0,365,368,1,0,0,0,366,
		364,1,0,0,0,366,367,1,0,0,0,367,369,1,0,0,0,368,366,1,0,0,0,369,370,5,
		39,0,0,370,116,1,0,0,0,371,372,5,91,0,0,372,373,3,119,59,0,373,374,5,93,
		0,0,374,118,1,0,0,0,375,376,5,61,0,0,376,377,3,119,59,0,377,378,5,61,0,
		0,378,388,1,0,0,0,379,383,5,91,0,0,380,382,9,0,0,0,381,380,1,0,0,0,382,
		385,1,0,0,0,383,384,1,0,0,0,383,381,1,0,0,0,384,386,1,0,0,0,385,383,1,
		0,0,0,386,388,5,93,0,0,387,375,1,0,0,0,387,379,1,0,0,0,388,120,1,0,0,0,
		389,391,3,141,70,0,390,389,1,0,0,0,391,392,1,0,0,0,392,390,1,0,0,0,392,
		393,1,0,0,0,393,122,1,0,0,0,394,395,5,48,0,0,395,397,7,4,0,0,396,398,3,
		143,71,0,397,396,1,0,0,0,398,399,1,0,0,0,399,397,1,0,0,0,399,400,1,0,0,
		0,400,124,1,0,0,0,401,403,3,141,70,0,402,401,1,0,0,0,403,404,1,0,0,0,404,
		402,1,0,0,0,404,405,1,0,0,0,405,406,1,0,0,0,406,410,5,46,0,0,407,409,3,
		141,70,0,408,407,1,0,0,0,409,412,1,0,0,0,410,408,1,0,0,0,410,411,1,0,0,
		0,411,414,1,0,0,0,412,410,1,0,0,0,413,415,3,129,64,0,414,413,1,0,0,0,414,
		415,1,0,0,0,415,433,1,0,0,0,416,418,5,46,0,0,417,419,3,141,70,0,418,417,
		1,0,0,0,419,420,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,0,421,423,1,0,0,
		0,422,424,3,129,64,0,423,422,1,0,0,0,423,424,1,0,0,0,424,433,1,0,0,0,425,
		427,3,141,70,0,426,425,1,0,0,0,427,428,1,0,0,0,428,426,1,0,0,0,428,429,
		1,0,0,0,429,430,1,0,0,0,430,431,3,129,64,0,431,433,1,0,0,0,432,402,1,0,
		0,0,432,416,1,0,0,0,432,426,1,0,0,0,433,126,1,0,0,0,434,435,5,48,0,0,435,
		437,7,4,0,0,436,438,3,143,71,0,437,436,1,0,0,0,438,439,1,0,0,0,439,437,
		1,0,0,0,439,440,1,0,0,0,440,441,1,0,0,0,441,445,5,46,0,0,442,444,3,143,
		71,0,443,442,1,0,0,0,444,447,1,0,0,0,445,443,1,0,0,0,445,446,1,0,0,0,446,
		449,1,0,0,0,447,445,1,0,0,0,448,450,3,131,65,0,449,448,1,0,0,0,449,450,
		1,0,0,0,450,472,1,0,0,0,451,452,5,48,0,0,452,453,7,4,0,0,453,455,5,46,
		0,0,454,456,3,143,71,0,455,454,1,0,0,0,456,457,1,0,0,0,457,455,1,0,0,0,
		457,458,1,0,0,0,458,460,1,0,0,0,459,461,3,131,65,0,460,459,1,0,0,0,460,
		461,1,0,0,0,461,472,1,0,0,0,462,463,5,48,0,0,463,465,7,4,0,0,464,466,3,
		143,71,0,465,464,1,0,0,0,466,467,1,0,0,0,467,465,1,0,0,0,467,468,1,0,0,
		0,468,469,1,0,0,0,469,470,3,131,65,0,470,472,1,0,0,0,471,434,1,0,0,0,471,
		451,1,0,0,0,471,462,1,0,0,0,472,128,1,0,0,0,473,475,7,5,0,0,474,476,7,
		6,0,0,475,474,1,0,0,0,475,476,1,0,0,0,476,478,1,0,0,0,477,479,3,141,70,
		0,478,477,1,0,0,0,479,480,1,0,0,0,480,478,1,0,0,0,480,481,1,0,0,0,481,
		130,1,0,0,0,482,484,7,7,0,0,483,485,7,6,0,0,484,483,1,0,0,0,484,485,1,
		0,0,0,485,487,1,0,0,0,486,488,3,141,70,0,487,486,1,0,0,0,488,489,1,0,0,
		0,489,487,1,0,0,0,489,490,1,0,0,0,490,132,1,0,0,0,491,492,5,92,0,0,492,
		502,7,8,0,0,493,495,5,92,0,0,494,496,5,13,0,0,495,494,1,0,0,0,495,496,
		1,0,0,0,496,497,1,0,0,0,497,502,5,10,0,0,498,502,3,135,67,0,499,502,3,
		137,68,0,500,502,3,139,69,0,501,491,1,0,0,0,501,493,1,0,0,0,501,498,1,
		0,0,0,501,499,1,0,0,0,501,500,1,0,0,0,502,134,1,0,0,0,503,504,5,92,0,0,
		504,515,3,141,70,0,505,506,5,92,0,0,506,507,3,141,70,0,507,508,3,141,70,
		0,508,515,1,0,0,0,509,510,5,92,0,0,510,511,7,9,0,0,511,512,3,141,70,0,
		512,513,3,141,70,0,513,515,1,0,0,0,514,503,1,0,0,0,514,505,1,0,0,0,514,
		509,1,0,0,0,515,136,1,0,0,0,516,517,5,92,0,0,517,518,5,120,0,0,518,519,
		3,143,71,0,519,520,3,143,71,0,520,138,1,0,0,0,521,522,5,92,0,0,522,523,
		5,117,0,0,523,524,5,123,0,0,524,526,1,0,0,0,525,527,3,143,71,0,526,525,
		1,0,0,0,527,528,1,0,0,0,528,526,1,0,0,0,528,529,1,0,0,0,529,530,1,0,0,
		0,530,531,5,125,0,0,531,140,1,0,0,0,532,533,7,10,0,0,533,142,1,0,0,0,534,
		535,7,11,0,0,535,144,1,0,0,0,536,537,8,12,0,0,537,146,1,0,0,0,538,539,
		5,45,0,0,539,540,5,45,0,0,540,541,1,0,0,0,541,552,3,117,58,0,542,543,5,
		45,0,0,543,544,5,45,0,0,544,548,1,0,0,0,545,547,8,13,0,0,546,545,1,0,0,
		0,547,550,1,0,0,0,548,546,1,0,0,0,548,549,1,0,0,0,549,552,1,0,0,0,550,
		548,1,0,0,0,551,538,1,0,0,0,551,542,1,0,0,0,552,553,1,0,0,0,553,554,6,
		73,0,0,554,148,1,0,0,0,555,557,7,14,0,0,556,555,1,0,0,0,557,558,1,0,0,
		0,558,556,1,0,0,0,558,559,1,0,0,0,559,560,1,0,0,0,560,561,6,74,1,0,561,
		150,1,0,0,0,562,563,7,15,0,0,563,564,1,0,0,0,564,565,6,75,2,0,565,152,
		1,0,0,0,566,567,5,35,0,0,567,569,4,76,0,0,568,570,5,33,0,0,569,568,1,0,
		0,0,569,570,1,0,0,0,570,574,1,0,0,0,571,573,3,145,72,0,572,571,1,0,0,0,
		573,576,1,0,0,0,574,572,1,0,0,0,574,575,1,0,0,0,575,577,1,0,0,0,576,574,
		1,0,0,0,577,578,6,76,1,0,578,154,1,0,0,0,37,0,348,354,356,364,366,383,
		387,392,399,404,410,414,420,423,428,432,439,445,449,457,460,467,471,475,
		480,484,489,495,501,514,528,548,551,558,569,574,3,0,2,0,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace YALuaToy.Compilation.Antlr
